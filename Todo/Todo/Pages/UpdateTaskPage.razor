@page "/updatetask/{TaskId}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient _http
@inject AuthHandler _auth
@using System.Net.Http.Headers

<h3>Update Task</h3>



<SfTextBox @bind-Value="@taskDetails.Title"></SfTextBox>
<label style="color: tomato; font-size: 10px">@ErrorMessage</label>
<SfTextBox @bind-Value="@taskDetails.Description"></SfTextBox>
<SfCheckBox Label="Is Active" @bind-Checked="@taskDetails.Active"></SfCheckBox>

@code {

  protected override async Task OnInitializedAsync()
  {
    await GetTask();
  }

  [Parameter]
  public string TaskId { get; set; }

  public string ErrorMessage { get; set; }

  public TaskDetail taskDetails = new TaskDetail();

  private async Task GetTask()
  {
    _http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await _auth.GetAuthAccessToken());
    var response = await _http.GetAsync($"https://localhost:5001/api/tasks/{Guid.Parse(TaskId)}");
    if (response.IsSuccessStatusCode)
    {
      string content = await response.Content.ReadAsStringAsync();
      taskDetails = Newtonsoft.Json.JsonConvert.DeserializeObject<ResponseModelForSinglePayload>(content).Payload;
      //taskDetails = responseModel.Payload;
      //State.OnInitSetTodos(responseModel.Payload);
    }
  }

}
