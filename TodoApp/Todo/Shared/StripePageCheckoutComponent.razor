<h3>Checkout Component</h3>

@*@inject StripeStateService _StripeStateService*@
@inject IJSRuntime jsRuntime
@*@implements IDisposable*@


@{

}


@*<input type="button" value="Create" onclick="location.href='@Url.Action("CreateAndSave", "Home")'" />*@
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Stripe Sample</title>
  <meta name="description" content="A demo of Stripe Payment Intents" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />


</head>

<body>
  <div class="sr-root">
    <div class="sr-main">
      <header class="sr-header">
        <div class="sr-header__logo"></div>
      </header>
      <div class="sr-payment-summary payment-view">
        <h1 class="order-amount">$14.00</h1>
        <h4>Purchase a Pasha photo</h4>
      </div>
      <div class="sr-payment-form payment-view">
        <div class="sr-form-row">
          <label for="card-element">
            Payment details
          </label>
          <div class="sr-combo-inputs">
            <div class="sr-combo-inputs-row">
              <input type="text"
                     id="name"
                     placeholder="Name"
                     autocomplete="cardholder"
                     class="sr-input" />
            </div>
            <div class="sr-combo-inputs-row">
              <div class="sr-input sr-card-element" id="card-element"></div>
            </div>
          </div>
          <div class="sr-field-error" id="card-errors" role="alert"></div>
          <div class="sr-form-row">
            <label class="sr-checkbox-label"><input type="checkbox" id="save-card"><span class="sr-checkbox-check"></span> Save card for future payments</label>
          </div>
        </div>
        <button id="submit"><div class="spinner hidden" id="spinner"></div><span id="button-text">Pay</span></button>
        <div class="sr-legal-text">
          Your card will be charge $14.00<span id="save-card-text"> and your card details will be saved to your account</span>.
        </div>
      </div>
      <div class="sr-payment-summary hidden completed-view">
        <h1>Your payment <span class="status"></span></h1>
        <h4>
          View PaymentIntent response:
        </h4>
      </div>
      <div class="sr-section hidden completed-view">
        <div class="sr-callout">
          <pre>
  
            </pre>
        </div>
        <button onclick="window.location.href = '/';">Restart demo</button>
      </div>
    </div>
    <div class="sr-content">
      <div class="pasha-image-stack">
        <img src="https://picsum.photos/280/320?random=1"
             width="140"
             height="160" />
        <img src="https://picsum.photos/280/320?random=2"
             width="140"
             height="160" />
        <img src="https://picsum.photos/280/320?random=3"
             width="140"
             height="160" />
        <img src="https://picsum.photos/280/320?random=4"
             width="140"
             height="160" />
      </div>
    </div>
  </div>
</body>
</html>

@code {

  private IDisposable apiCallSub;
  public string ErrorMessage = "";
  protected override void OnInitialized()
  {
    //jsRuntime.InvokeVoidAsync("elements");

    //Subscribes();
    base.OnInitialized();
    //jsRuntime.InvokeVoidAsync("redirectToCheckout"/*, sessionId*/);
    //jsRuntime.InvokeVoidAsync("setupElements");
    //jsRuntime.InvokeVoidAsync("fetch");


  }

  //private void Subscribes()
  //{
  //  apiCallSub = _StripeStateService.ApiCallResultObservable.Subscribe(x =>
  //  {
  //    Console.WriteLine(x.Operation);
  //    Console.WriteLine(x.IsSucceed);
  //    Console.WriteLine(x.Data);

  //    switch (x.Operation)
  //    {
  //      case "CreateOrGetStripeCustomer":

  //        if (x.IsSucceed == false)
  //        {
  //          ErrorMessage = x.ErrorMessage;
  //          StateHasChanged();
  //        }
  //        else
  //        {
  //        //IsSucceed = true;
  //        //IsTaskRunning = false;
  //        //SpinnerVisiblity = false;
  //        StateHasChanged();
  //        }

  //        break;
  //    }

  //  });
  //}

  //public void Dispose()
  //{
  //  apiCallSub.Dispose();
  //}
}

